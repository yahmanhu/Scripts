#!/bin/bash
#                                      _
#         ___ _ __   ___ _ __ ___   __| |
#        / __| '_ \ / __| '_ ` _ \ / _` |
#        \__ | |_) | (__| | | | | | (_| |
#        |___| .__/ \___|_| |_| |_|\__,_|
#             |_|
#
#                   spotymenu
#               Created by: spcmd
#           http://spcmd.github.io
#           https://github.com/spcmd
#           https://gist.github.com/spcmd
#

#==================================
# Configurable Options
#==================================

# File that contains the album list
file_albumlist=$HOME/.spoty_albums

# Path to JSON.awk
# You must have this if you want to use the `autoplay_album` option
# JSON.awk was written by step- (https://github.com/step-/JSON.awk)
file_json_awk=$HOME/scripts/JSON.awk

# Artist and Album separator in the displayed -dmenu- list
separator=" - "

# Colors
font="monospace-10"
list_size="20"
normal_bg="#181818"
normal_fg="#ccc"
selected_bg="#1DB954"
selected_fg="#181818"

# Autoplay selected album (local album list), yes or no/empty
# JSON.awk file needed, see: file_json_awk above!
autoplay_album="yes"

# Autoplay search result, yes or no/empty
autoplay_search_result="yes" 

# For Awesome WM: switch to spotify's tag after selecting or searching
awm_switch="no" # yes or no/empty
awm_screen="1"
awm_tag="3"

#==================================

# awesome wm switch to tag function
awm_switch_to_tag() {
    echo "local awful = require('awful') ; return awful.tag.viewonly(tags[$awm_screen][$awm_tag])" | awesome-client
}

dbus_stop() {
    dbus-send  --print-reply --session --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop
}
dbus_open() {
    dbus-send  --print-reply --session --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri "string:$spotify_uri" > /dev/null
}


# dmenu styling
DMENU="dmenu -i -l $list_size -fn $font -nb $normal_bg -nf $normal_fg -sb $selected_bg -sf $selected_fg"

#==================================

# 1. Pipe album list to dmenu
album=$(awk -F '|' -v sep="$separator" '{print $1 sep $2}' $file_albumlist | $DMENU)

# 2.1. Check whether it was a search
if [[ $album = /* ]];then

    # search for: album
    if [[ $album = /album* ]] || [[ $album = /b* ]]; then
        type="album"
        query=$(echo "$album" | sed -e 's|/album||' -e 's|/b||' -e 's/ /+/g')
        api_url="https://api.spotify.com/v1/search?q=$query&type=$type"
        dbus_call() { dbus_open; }
    # search for: artist
    elif [[ $album = /artist* ]] || [[ $album = /a* ]]; then
        type="artist"
        query=$(echo "$album" | sed -e 's|/artist||' -e 's|/a||' -e 's/ /+/g')
        api_url="https://api.spotify.com/v1/search?q=$query&type=$type"
        dbus_call() { dbus_open; }
    # search for artis and/or track
    else
        type="track"
        query=$(echo "$album" | sed -e 's|/||' -e 's/ /+/g')
        api_url="https://api.spotify.com/v1/search?q=$query&type=$type"
            if [[ $autoplay_search_result = "yes" ]]; then
                dbus_call() { dbus_stop && dbus_open; }
            else
                dbus_call() { dbus_open; }
            fi
    fi

    spotify_uri="$(curl -s "$api_url" | grep --color=never -E -o "spotify:$type:[a-zA-Z0-9]+" -m 1)"
    dbus_call

    # awesome wm - switch to spotify's tag
    if [[ $awm_switch = "yes" ]]; then
        awm_switch_to_tag
    fi

    ## -- DEBUG ---
    #echo -e "This was a search for: \033[0;33m$query\033[0m"
    #echo -e "type: \033[0;33m$type\033[0m"
    #echo -e "spotify_uri: \033[0;33m$spotify_uri\033[0m"

# 2.2. If it wasn't a search then load the album
else

    # Transform the custom separator format to the default pipe delimeted format (like in the file_albumlist)
    get_album=$(echo "$album" | awk -v sep="$separator" '{sub(sep,"|");print}')

    # Get the Album ID
    # Use string match (index) instead of regex because the album names can contain special regex characters.
    # Also the list uses pipes as delimeters (and the pipe is a special char in regex).
    album_id=$(awk -F '|' 'index($0, "'"$get_album"'"){print $NF}' $file_albumlist | head -n 1)

    # 2.2.1. If no album selected, exit
    if [[ -z $get_album ]]; then
        exit
    else
        # 2.2.1.1 open the album in spotify
        if [[ $autoplay_album = "yes" ]]; then
            track_id=$(curl --silent -X GET "https://api.spotify.com/v1/albums/$album_id/tracks" > /tmp/spotymenu.json && echo "/tmp/spotymenu.json" | awk -f "$file_json_awk" | awk -F']' '/^\["items",0,"id"]/{gsub(/^[ \t]+/, "", $2);gsub(/"/,"", $2);print $2}')
            dbus-send  --print-reply --session --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop &&\
            dbus-send --print-reply=literal --session --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri "string:spotify:track:$track_id"
        # 2.2.1.2. else switch to album and don't autoplay
        else
            dbus-send --print-reply=literal --session --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri "string:spotify:album:$album_id"
            # awesome wm - switch to spotify's tag
            if [[ $awm_switch = "yes" ]]; then
                awm_switch_to_tag
            fi
        fi
        
        # -- DEBUG ---
        #echo -e "album: \033[0;33m$album\033[0m"
        #echo -e "get_album: \033[0;33m$get_album\033[0m"
        #echo -e "album_id: \033[0;33m$album_id\033[0m"
        #echo -e "track_id: \033[0;33m$track_id\033[0m"
    fi
fi
