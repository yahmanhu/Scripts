#!/bin/bash
# Select media (video) file from dmenu and play it with mpv
# Download subtitle with periscope (https://github.com/patrickdessalle/periscope)

# Base directory where script search for .mkv, .mp4 and .srt files
dir=~/downloads
# Set dmenu font
dmenu_font='monospace-12'

# Find .mkv, .mp4 and .srt files
find_mkv_files(){ find $dir -iname "*.mkv";}
find_mp4_files(){ find $dir -iname "*.mp4";}
find_srt_files(){ find $dir -iname "*.srt";}
# Find .srt files for the selected media file in it's own directory by changing file extension during find
find_mp4_srt(){ find $selected_file_dir -iname ${file_name%.mp4}.srt;}
find_mkv_srt(){ find $selected_file_dir -iname ${file_name%.mkv}.srt;}
# Play selected file with mpv
play(){ mpv $selected_file; }

# Find media and subtitle files, then print them into dmenu, removing the paths and leaving only the filenames
file_name=$( ( find_mkv_files  && find_mp4_files  && find_srt_files ) | awk -F "/" '{print $NF}' | dmenu -i -l 20 -fn $dmenu_font )

case $file_name in

    # If no file selected, then exit the program
    "") exit;;
    # If filename contains brackets, then escape them with sed
    *) if [[ "$file_name" == *[\[\]]* ]]; then file_name=$(sed 's/\[/\\[/g;s/\]/\\]/g' <<< $file_name) ; fi;;

esac

# Get the selected file's complete path
selected_file=$(find -iname $file_name)
# Get the path of the directory that contains the selected file
selected_file_dir=$(echo $selected_file | awk -F "/" 'BEGIN{OFS="/"} {$NF=""; print $0}')

# If no subtitle (.srt) file for the selected file
if [[ ! -e $(find_mkv_srt) ]] && [[ ! -e $(find_mp4_srt) ]]; then
    # Ask for download
    subtitle=$(echo -e "yes\nno" | dmenu -p "Download subtitle before start?" -i -fn $dmenu_font)

    case $subtitle in
        # If answer is yes, then inform user via dmenu and try to download subtitle with periscope
        yes) dmenu -p "Downloading subtitle..." -i -l 1 -fn $dmenu_font  &

            # Kill dmenu after 2 seconds, because we use it just as a feedback
            if pgrep "dmenu" > /dev/null;then
                sleep 2
                pkill dmenu
            # Download subtitle with periscope (-l means language)
            fi && periscope -l en $(find $dir -iname $file_name)

            # If periscope can't find subtitle to download, then ask if we want to play the selected file or not
            if [ $? -ne 0 ]; then subtitle_error=$(echo -e "yes\nno"  |  dmenu -p "Can't find subtitle. Play anyway?" -i -fn $dmenu_font)

                case $subtitle_error in
                    yes) play;;
                    no) exit;;
                esac

            else
                play

            fi
             ;;

        # If we don't want to download subtitle file, then play instantly
        no) play ;;
    esac

# If there's already a subtitle for the selected file, then play instantly
else
    play
fi
